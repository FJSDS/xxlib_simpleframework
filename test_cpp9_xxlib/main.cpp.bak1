// 模拟了一个比较稳定的用于服务器端的 60fps 调用. 主要应对阿里云之类 timer 精度极低的主机

#include "xx_uv.h"

int main()
{
	xx::MemPool::RegisterInternal();
	xx::MemPool mp;

	xx::UvLoop loop(&mp);

	constexpr auto ticksPerFrame = 166640;	// (int64_t)10000000 / 60;
	int64_t counter = 0;
	int64_t ticksPool = 0;
	auto beginTicks = xx::GetDateTimeNowTicks();
	auto lastTicks = xx::GetDateTimeNowTicks();

	xx::UvTimer timer(loop, 1, 1, [&]
	{
		auto currTicks = xx::GetDateTimeNowTicks();
		ticksPool += currTicks - lastTicks;
		lastTicks = currTicks;
		while (ticksPool > ticksPerFrame)
		{
			++counter;
			ticksPool -= ticksPerFrame;
		}
	});
	xx::UvTimer timer2(loop, 1000, 1000, [&]
	{
		auto fps = counter / ((xx::GetDateTimeNowTicks() - beginTicks) / 10000000.0);
		std::cout << fps << std::endl;
	});

	loop.Run();

	return 0;
}
